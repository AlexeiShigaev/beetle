"""
Вариант двух вложенных циклов. Если 'телепортация' не запрещена.
Берем квадрат 1000х1000. Правую верхнюю четверть. Начиная от стартовой координаты (1000,1000).
и подсчитываем количество клеток удовлетворяющих условию (сумма цифр координат <= 25)
Забываем пока что координата (10001001, 20003001) тоже удовлетворяет условию.
Подсчитываются так же и клетки, которые недоступны для смежного хода.
"""
import time

from routins import sum_in_coordinates

size_x = 1000
size_y = 1000
start_x = 1000
start_y = 1000
# start_x = 0
# start_y = 0
counter = 0

time_start = time.time()
for x in range(start_x, start_x + size_x):
    for y in range(start_y, start_y + size_y):
        if sum_in_coordinates(x, y) <= 25:
            counter += 1
time_end = time.time()

print(f'Правый верхний квадрат содержит {counter} клеток удовлетворяющих нашему условию')
print('Время выполнения:', time_end - time_start)

"""
Правый верхний квадрат содержит 313488 клеток удовлетворяющих нашему условию
Время выполнения: 3.7812161445617676
если применить @lru_cache(1024)
Время выполнения: 0.6690385341644287
"""